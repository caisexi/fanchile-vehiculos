<?php

/**
 * This is the model base class for the table "gasolina".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Gasolina".
 *
 * Columns in table "gasolina" available as properties of the model,
 * followed by relations of table "gasolina" available as properties of the model.
 *
 * @property integer $id
 * @property integer $id_planilla
 * @property integer $id_vehiculo
 * @property string $tarjeta
 * @property string $fecha
 * @property string $hora
 * @property string $comuna
 * @property string $direccion
 * @property string $nro_transaccion
 * @property integer $precio_u
 * @property string $litros
 * @property integer $especifico
 * @property integer $total
 * @property integer $costo_empresa
 *
 * @property PlanillasCopec $idPlanilla
 * @property Vehiculos $idVehiculo
 */
abstract class BaseGasolina extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'gasolina';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Gasolina|Gasolinas', $n);
	}

	public static function representingColumn() {
		return 'tarjeta';
	}

	public function rules() {
		return array(
			array('id_planilla, id_vehiculo, tarjeta, fecha, hora, comuna, direccion, nro_transaccion, precio_u, litros, especifico, total, costo_empresa', 'required'),
			array('id_planilla, id_vehiculo, precio_u, especifico, total, costo_empresa', 'numerical', 'integerOnly'=>true),
			array('tarjeta, comuna, direccion, nro_transaccion', 'length', 'max'=>255),
			array('litros', 'length', 'max'=>10),
			array('id, id_planilla, id_vehiculo, tarjeta, fecha, hora, comuna, direccion, nro_transaccion, precio_u, litros, especifico, total, costo_empresa', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idPlanilla' => array(self::BELONGS_TO, 'PlanillasCopec', 'id_planilla'),
			'idVehiculo' => array(self::BELONGS_TO, 'Vehiculos', 'id_vehiculo'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'id_planilla' => null,
			'id_vehiculo' => null,
			'tarjeta' => Yii::t('app', 'Tarjeta'),
			'fecha' => Yii::t('app', 'Fecha'),
			'hora' => Yii::t('app', 'Hora'),
			'comuna' => Yii::t('app', 'Comuna'),
			'direccion' => Yii::t('app', 'Direccion'),
			'nro_transaccion' => Yii::t('app', 'Nro Transaccion'),
			'precio_u' => Yii::t('app', 'Precio U'),
			'litros' => Yii::t('app', 'Litros'),
			'especifico' => Yii::t('app', 'Especifico'),
			'total' => Yii::t('app', 'Total'),
			'costo_empresa' => Yii::t('app', 'Costo Empresa'),
			'idPlanilla' => null,
			'idVehiculo' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('id_planilla', $this->id_planilla);
		$criteria->compare('id_vehiculo', $this->id_vehiculo);
		$criteria->compare('tarjeta', $this->tarjeta, true);
		$criteria->compare('fecha', $this->fecha, true);
		$criteria->compare('hora', $this->hora, true);
		$criteria->compare('comuna', $this->comuna, true);
		$criteria->compare('direccion', $this->direccion, true);
		$criteria->compare('nro_transaccion', $this->nro_transaccion, true);
		$criteria->compare('precio_u', $this->precio_u);
		$criteria->compare('litros', $this->litros, true);
		$criteria->compare('especifico', $this->especifico);
		$criteria->compare('total', $this->total);
		$criteria->compare('costo_empresa', $this->costo_empresa);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}