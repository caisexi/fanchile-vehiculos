<?php

/**
 * This is the model base class for the table "presupuesto".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Presupuesto".
 *
 * Columns in table "presupuesto" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $ano
 * @property integer $ppto_anual
 * @property integer $ppto_disponible
 * @property integer $ppto_mensual
 * @property string $creado
 * @property string $modificado
 *
 */
abstract class BasePresupuesto extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'presupuesto';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Presupuesto|Presupuestos', $n);
	}

	public static function representingColumn() {
		return 'ano';
	}

	public function rules() {
		return array(
			array('ano, ppto_anual, ppto_disponible, ppto_mensual, creado, modificado', 'required'),
			array('ppto_anual, ppto_disponible, ppto_mensual', 'numerical', 'integerOnly'=>true),
			array('ano', 'length','min'=>4,'max'=>4),
			array('id, ano, ppto_anual, ppto_disponible, ppto_mensual, creado, modificado', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'ano' => Yii::t('app', 'AÃ±o'),
			'ppto_anual' => Yii::t('app', 'Presupuesto Anual'),
			'ppto_disponible' => Yii::t('app', 'Presupuesto Disponible'),
			'ppto_mensual' => Yii::t('app', 'Presupuesto Mensual'),
			'creado' => Yii::t('app', 'Creado'),
			'modificado' => Yii::t('app', 'Modificado'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('ano', $this->ano, true);
		$criteria->compare('ppto_anual', $this->ppto_anual);
		$criteria->compare('ppto_disponible', $this->ppto_disponible);
		$criteria->compare('ppto_mensual', $this->ppto_mensual);
		$criteria->compare('creado', $this->creado, true);
		$criteria->compare('modificado', $this->modificado, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
        
        public function beforeValidate() {
            if ($this->isNewRecord)
                $this->creado = new CDbExpression('NOW()');

            $this->modificado = new CDbExpression('NOW()');

            return parent::beforeSave();
        }
}