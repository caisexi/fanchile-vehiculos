<?php

/**
 * This is the model base class for the table "planillas_copec".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PlanillasCopec".
 *
 * Columns in table "planillas_copec" available as properties of the model,
 * followed by relations of table "planillas_copec" available as properties of the model.
 *
 * @property string $id
 * @property integer $tipo_planilla
 * @property string $creado
 * @property string $modificado
 *
 * @property Diesel[] $diesels
 * @property Gasolina[] $gasolinas
 */
abstract class BasePlanillasCopec extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'planillas_copec';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'PlanillasCopec|PlanillasCopecs', $n);
	}

	public static function representingColumn() {
		return 'creado';
	}

	public function rules() {
		return array(
			array('id, tipo_planilla, creado, modificado', 'required'),
			array('tipo_planilla', 'numerical', 'integerOnly'=>true),
			array('id', 'length', 'max'=>255),
			array('id, tipo_planilla, creado, modificado', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'diesels' => array(self::HAS_MANY, 'Diesel', 'id_planilla'),
			'gasolinas' => array(self::HAS_MANY, 'Gasolina', 'id_planilla'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'tipo_planilla' => Yii::t('app', 'Tipo Planilla'),
			'creado' => Yii::t('app', 'Creado'),
			'modificado' => Yii::t('app', 'Modificado'),
			'diesels' => null,
			'gasolinas' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('tipo_planilla', $this->tipo_planilla);
		$criteria->compare('creado', $this->creado, true);
		$criteria->compare('modificado', $this->modificado, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
        
        public function beforeValidate() {
            if ($this->isNewRecord)
                $this->creado = new CDbExpression('NOW()');

            $this->modificado = new CDbExpression('NOW()');

            return parent::beforeSave();
        }
}