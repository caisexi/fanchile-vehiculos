<?php

/**
 * This is the model base class for the table "historial_vehiculos".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "HistorialVehiculos".
 *
 * Columns in table "historial_vehiculos" available as properties of the model,
 * followed by relations of table "historial_vehiculos" available as properties of the model.
 *
 * @property integer $id
 * @property integer $id_vehiculo
 * @property integer $id_persona
 * @property string $fecha
 * @property string $creado
 * @property string $modificado
 *
 * @property Vehiculos $idVehiculo
 * @property Personal $idPersona
 */
abstract class BaseHistorialVehiculos extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'historial_vehiculos';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Historial de Vehiculo|Historiales de Vehiculos', $n);
	}

	public static function representingColumn() {
		return 'idVehiculo';
	}

	public function rules() {
		return array(
			array('id_vehiculo, id_persona, fecha, creado, modificado', 'required'),
			array('id_vehiculo, id_persona', 'numerical', 'integerOnly'=>true),
			array('id, id_vehiculo, id_persona, fecha, creado, modificado', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idVehiculo' => array(self::BELONGS_TO, 'Vehiculos', 'id_vehiculo'),
			'idPersona' => array(self::BELONGS_TO, 'Personal', 'id_persona'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'id_vehiculo' => null,
			'id_persona' => null,
			'fecha' => Yii::t('app', 'Fecha'),
			'creado' => Yii::t('app', 'Creado'),
			'modificado' => Yii::t('app', 'Modificado'),
			'idVehiculo' => null,
			'idPersona' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('id_vehiculo', $this->id_vehiculo);
		$criteria->compare('id_persona', $this->id_persona);
		$criteria->compare('fecha', $this->fecha, true);
		$criteria->compare('creado', $this->creado, true);
		$criteria->compare('modificado', $this->modificado, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
        
        public function beforeValidate() {
            if ($this->isNewRecord)
                $this->creado = new CDbExpression('NOW()');

            $this->modificado = new CDbExpression('NOW()');

            return parent::beforeSave();
        }
}