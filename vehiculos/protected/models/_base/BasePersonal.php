<?php

/**
 * This is the model base class for the table "personal".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Personal".
 *
 * Columns in table "personal" available as properties of the model,
 * followed by relations of table "personal" available as properties of the model.
 *
 * @property integer $id
 * @property string $rut
 * @property string $nombre
 * @property string $apellido_pat
 * @property string $apellido_mat
 * @property integer $id_cargo_empresa
 * @property string $creado
 * @property string $modificado
 *
 * @property HistorialVehiculos[] $historialVehiculoses
 * @property CargosEmpresa $idCargoEmpresa
 */
abstract class BasePersonal extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'personal';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Personal|Personal', $n);
	}

	public static function representingColumn() {
		return array('nombre','apellido_pat');
	}

	public function rules() {
		return array(
			array('rut, nombre, apellido_pat, creado, modificado', 'required'),
			array('id_cargo_empresa', 'numerical', 'integerOnly'=>true),
			array('rut', 'length', 'max'=>9),
			array('nombre, apellido_pat, apellido_mat', 'length', 'max'=>50),
			array('apellido_mat', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, rut, nombre, apellido_pat, apellido_mat, id_cargo_empresa, creado, modificado', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'historialVehiculoses' => array(self::HAS_MANY, 'HistorialVehiculos', 'id_persona'),
			'idCargoEmpresa' => array(self::BELONGS_TO, 'CargosEmpresa', 'id_cargo_empresa'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'rut' => Yii::t('app', 'Rut'),
			'nombre' => Yii::t('app', 'Nombre'),
			'apellido_pat' => Yii::t('app', 'Apellido Pat'),
			'apellido_mat' => Yii::t('app', 'Apellido Mat'),
			'id_cargo_empresa' => null,
			'creado' => Yii::t('app', 'Creado'),
			'modificado' => Yii::t('app', 'Modificado'),
			'historialVehiculoses' => null,
			'idCargoEmpresa' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('rut', $this->rut, true);
		$criteria->compare('nombre', $this->nombre, true);
		$criteria->compare('apellido_pat', $this->apellido_pat, true);
		$criteria->compare('apellido_mat', $this->apellido_mat, true);
		$criteria->compare('id_cargo_empresa', $this->id_cargo_empresa);
		$criteria->compare('creado', $this->creado, true);
		$criteria->compare('modificado', $this->modificado, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
        
        public function beforeValidate() {
            if ($this->isNewRecord)
                $this->creado = new CDbExpression('NOW()');

            $this->modificado = new CDbExpression('NOW()');

            return parent::beforeSave();
        }
}